<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:component-scan base-package="com.springbook.biz"></context:component-scan>
	
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<!-- DataSource 설정 -->
<!-- 	<context:property-placeholder location="classpath:config/database.properties"/> -->
	
	<!-- 일반적으로 가장 많이 사용하는 Apache의 BasicDataSource를 등록 -->
	<!-- 연결에 필요한 property들을 Setter 인젝션으로 설정 -->
	<!-- 객체가 삭제되기 전 연결을 해제하기 위해 close() 메소드를 destroy-method 속성으로 지정 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.h2.Driver"/>
		<property name="url" value="jdbc:h2:tcp://localhost/~/test"/>
		<property name="username" value="sa"/>
		<property name="password" value=""/>
	</bean>
	
	<!-- Spring JDBC 설정 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- Transaction 설정 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get" read-only="true"/>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut expression="execution(* com.springbook.biz..*(..))" id="txPointcut"/>
		<aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>
	</aop:config>
	
	
	
<!-- 	<bean id="afterReturning" class="com.springbook.biz.common.AfterReturningAdvice"></bean> -->
	
<!-- 	<aop:config> -->
<!-- 		<aop:pointcut expression="execution(* com.springbook.biz..*Impl.*(..))" id="allPointcut"/> -->
<!-- 		<aop:pointcut expression="execution(* com.springbook.biz..*Impl.get*(..))" id="getPointcut"/> -->
		
<!-- 		<aop:aspect ref="log"> -->
<!-- 			<aop:before pointcut-ref="allPointcut" method="printLog"/> -->
<!-- 		</aop:aspect> -->
<!-- 	</aop:config> -->
	
<!-- 	<bean id="userService" class="com.springbook.biz.user.impl.UserServiceImpl"> -->
<!-- 		<property name="userDAO" ref="userDAO"></property> -->
<!-- 	</bean> -->
	
<!-- 	<bean id="userDAO" class="com.springbook.biz.user.impl.UserDAO"></bean> -->

</beans>
